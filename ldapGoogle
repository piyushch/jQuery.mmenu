To grant **SuperUser** access to users who are found in LDAP and are members of the `APP_USER` group in **JBoss EAP 8**, follow these steps:  

---

## **üìå Step 1: Connect to JBoss CLI**
Run the JBoss CLI to connect to the running server:
```sh
./jboss-cli.sh --connect
```

---

## **üìå Step 2: Configure LDAP Authentication for the Management Console**

### **1Ô∏è‚É£ Define an LDAP Directory Context**
This establishes a connection to the LDAP server.
```sh
/subsystem=elytron/dir-context=ldap-dir:add(
    url="sldap://your-ldap-server:636",
    principal="CN=admin,CN=SAI,DC=ABC,DC=com",
    credential="your_admin_password",
    referral-mode="follow"
)
```

---

### **2Ô∏è‚É£ Create an LDAP Realm for Authentication**
This ensures that only users **who exist in LDAP and belong to `APP_USER`** can authenticate.
```sh
/subsystem=elytron/ldap-realm=ldapRealm:add(
    dir-context=ldap-dir,
    identity-mapping={
        rdn-identifier="sAMAccountName",
        search-base-dn="CN=SAI,DC=ABC,DC=com",
        search-recursive=true,
        search-filter="(&(sAMAccountName={0})(memberOf=CN=APP_USER,CN=SAI,DC=ABC,DC=com))",
        attribute-mapping=[
            { from="sAMAccountName", to="username" },
            { from="memberOf", to="roles" }
        ]
    }
)
```

---

### **3Ô∏è‚É£ Define a Role Mapper to Assign SuperUser Role**
Users found in LDAP should automatically be assigned **SuperUser** access.
```sh
/subsystem=elytron/simple-role-decoder=superuser-role-decoder:add(attribute="roles")

/subsystem=elytron/security-domain=ManagementDomain:add(
    default-realm=ldapRealm,
    permission-mapper=default-permission-mapper,
    realms=[{realm=ldapRealm, role-decoder=superuser-role-decoder}]
)
```

---

### **4Ô∏è‚É£ Apply LDAP Authentication to the Management Console**
```sh
/core-service=management/access=authorization:write-attribute(name=provider, value=elytron)
/core-service=management/management-interface=http-interface:write-attribute(name=security-realm, value=ManagementDomain)
```

---

## **üìå Step 3: Restart JBoss for Changes to Take Effect**
```sh
./standalone.sh --server-config=standalone.xml
```

---

## **‚úÖ Expected Behavior**
1. Users **must be in LDAP** and in the `APP_USER` group.
2. If authentication is successful, **they are automatically assigned SuperUser access** to the **JBoss Management Console**.
3. The user can now log in at:
   ```
   https://your-jboss-server:9990
   ```

---

## **‚ö†Ô∏è Notes**
- Ensure your **LDAP server's SSL certificate** is trusted by Java (`cacerts`).
- If users belong to nested groups, you may need **recursive group membership checking**.
- To debug authentication, enable Elytron debugging:
  ```sh
  /subsystem=logging/logger=org.wildfly.security:add(level=TRACE)
  ```

This is the **correct CLI-based method** for integrating LDAP authentication **with SuperUser access** in **JBoss EAP 8 Management Console**. üöÄ Let me know if you need further help!














batch

/subsystem=elytron/dir-context=ldap-dir:add(
    url="sldap://your-ldap-server:636",
    principal="CN=admin,CN=SAI,DC=ABC,DC=com",
    credential="your_admin_password",
    referral-mode="follow"
)

/subsystem=elytron/ldap-realm=ldapRealm:add(
    dir-context=ldap-dir,
    identity-mapping={
        rdn-identifier="sAMAccountName",
        search-base-dn="CN=SAI,DC=ABC,DC=com",
        search-recursive=true,
        search-filter="(&(sAMAccountName={0})(memberOf=CN=APP_USER,CN=SAI,DC=ABC,DC=com))",
        attribute-mapping=[
            { from="sAMAccountName", to="username" },
            { from="memberOf", to="roles" }
        ]
    }
)

/subsystem=elytron/security-domain=ManagementDomain:add(
    default-realm=ldapRealm,
    permission-mapper=default-permission-mapper,
    realms=[{realm=ldapRealm, role-decoder=groups-to-roles}]
)

/core-service=management/management-interface=http-interface:write-attribute(name=security-realm, value=ManagementDomain)

run-batch













<ldap-realm name="ldapRealm">
    <dir-context>
        <ldap-connection url="sldap://your-ldap-server:636"
                         connect-timeout="5000"
                         search-timeout="3000">
            <authentication mechanism="simple">
                <username>CN=admin,CN=SAI,DC=ABC,DC=com</username>
                <password>your_admin_password</password>
            </authentication>
        </ldap-connection>
        <base-dn>CN=SAI,DC=ABC,DC=com</base-dn>
    </dir-context>
    <identity-mapping 
         search-recursive="true"
         search-filter="(&(sAMAccountName={0})(memberOf=CN=APP_USER,CN=SAI,DC=ABC,DC=com))">
        <!-- Use sAMAccountName as the principal name -->
        <attribute name="sAMAccountName" to-principal="true"/>
        <!-- Map the memberOf attribute to a constant role -->
        <attribute name="memberOf">
            <ignore-missing-attribute>false</ignore-missing-attribute>
            <role-mapper>
                <constant-role-mapper roles="SuperUser"/>
            </role-mapper>
        </attribute>
    </identity-mapping>
</ldap-realm>

--Next, create a security domain that uses the LDAP realm. Add this within the same Elytron subsystem:

<security-domain name="ManagementDomain" default-realm="ldapRealm" permission-mapper="default-permission-mapper">
    <realm name="ldapRealm" role-decoder="groups-to-roles"/>
</security-domain>


This configuration makes the management console (typically available at https://your-jboss-server:9990) use the Elytron security domain ‚ÄúManagementDomain‚Äù for authentication.
<management>
    <management-interfaces>
        <http-interface security-realm="ManagementDomain" http-upgrade-enabled="true" />
    </management-interfaces>
</management>

